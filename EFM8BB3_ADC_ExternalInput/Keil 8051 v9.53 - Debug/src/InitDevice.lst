C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\uxdai\S
                    -implicityStudio\v4_workspace\EFM8BB3_ADC_ExternalInput\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\uxdai\SimplicityStudio\v4_workspac
                    -e\EFM8BB3_ADC_ExternalInput\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//kits/common/drivers/efm8_
                    -retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.6//Device/shared/si8051Base;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.1.6//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELE
                    -NGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              ADC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              UART_0_enter_DefaultMode_from_RESET();
  37   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  38   1              // Restore the SFRPAGE
  39   1              SFRPAGE = SFRPAGE_save;
  40   1              // [Config Calls]$
  41   1      
  42   1      }
  43          
  44          //================================================================================
  45          // WDT_0_enter_DefaultMode_from_RESET
  46          //================================================================================
  47          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  48   1              // $[WDTCN - Watchdog Timer Control]
  49   1              SFRPAGE = 0x00;
  50   1              //Disable Watchdog with key sequence
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 2   

  51   1              WDTCN = 0xDE; //First key
  52   1              WDTCN = 0xAD; //Second key
  53   1              // [WDTCN - Watchdog Timer Control]$
  54   1      
  55   1      }
  56          
  57          //================================================================================
  58          // PORTS_0_enter_DefaultMode_from_RESET
  59          //================================================================================
  60          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  61   1              // $[P0 - Port 0 Pin Latch]
  62   1              /*
  63   1               // B0 (Port 0 Bit 0 Latch) = HIGH (P0.0 is high. Set P0.0 to drive or
  64   1               //     float high.)
  65   1               // B1 (Port 0 Bit 1 Latch) = HIGH (P0.1 is high. Set P0.1 to drive or
  66   1               //     float high.)
  67   1               // B2 (Port 0 Bit 2 Latch) = HIGH (P0.2 is high. Set P0.2 to drive or
  68   1               //     float high.)
  69   1               // B3 (Port 0 Bit 3 Latch) = HIGH (P0.3 is high. Set P0.3 to drive or
  70   1               //     float high.)
  71   1               // B4 (Port 0 Bit 4 Latch) = HIGH (P0.4 is high. Set P0.4 to drive or
  72   1               //     float high.)
  73   1               // B5 (Port 0 Bit 5 Latch) = HIGH (P0.5 is high. Set P0.5 to drive or
  74   1               //     float high.)
  75   1               // B6 (Port 0 Bit 6 Latch) = HIGH (P0.6 is high. Set P0.6 to drive or
  76   1               //     float high.)
  77   1               // B7 (Port 0 Bit 7 Latch) = HIGH (P0.7 is high. Set P0.7 to drive or
  78   1               //     float high.)
  79   1               */
  80   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
  81   1                              | P0_B5__HIGH | P0_B6__HIGH | P0_B7__HIGH;
  82   1              // [P0 - Port 0 Pin Latch]$
  83   1      
  84   1              // $[P0MDOUT - Port 0 Output Mode]
  85   1              /*
  86   1               // B0 (Port 0 Bit 0 Output Mode) = OPEN_DRAIN (P0.0 output is open-
  87   1               //     drain.)
  88   1               // B1 (Port 0 Bit 1 Output Mode) = OPEN_DRAIN (P0.1 output is open-
  89   1               //     drain.)
  90   1               // B2 (Port 0 Bit 2 Output Mode) = OPEN_DRAIN (P0.2 output is open-
  91   1               //     drain.)
  92   1               // B3 (Port 0 Bit 3 Output Mode) = OPEN_DRAIN (P0.3 output is open-
  93   1               //     drain.)
  94   1               // B4 (Port 0 Bit 4 Output Mode) = PUSH_PULL (P0.4 output is push-pull.)
  95   1               // B5 (Port 0 Bit 5 Output Mode) = OPEN_DRAIN (P0.5 output is open-
  96   1               //     drain.)
  97   1               // B6 (Port 0 Bit 6 Output Mode) = OPEN_DRAIN (P0.6 output is open-
  98   1               //     drain.)
  99   1               // B7 (Port 0 Bit 7 Output Mode) = OPEN_DRAIN (P0.7 output is open-
 100   1               //     drain.)
 101   1               */
 102   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 103   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 104   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 105   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 106   1              // [P0MDOUT - Port 0 Output Mode]$
 107   1      
 108   1              // $[P0MDIN - Port 0 Input Mode]
 109   1              /*
 110   1               // B0 (Port 0 Bit 0 Input Mode) = DIGITAL (P0.0 pin is configured for
 111   1               //     digital mode.)
 112   1               // B1 (Port 0 Bit 1 Input Mode) = DIGITAL (P0.1 pin is configured for
 113   1               //     digital mode.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 3   

 114   1               // B2 (Port 0 Bit 2 Input Mode) = DIGITAL (P0.2 pin is configured for
 115   1               //     digital mode.)
 116   1               // B3 (Port 0 Bit 3 Input Mode) = DIGITAL (P0.3 pin is configured for
 117   1               //     digital mode.)
 118   1               // B4 (Port 0 Bit 4 Input Mode) = DIGITAL (P0.4 pin is configured for
 119   1               //     digital mode.)
 120   1               // B5 (Port 0 Bit 5 Input Mode) = DIGITAL (P0.5 pin is configured for
 121   1               //     digital mode.)
 122   1               // B6 (Port 0 Bit 6 Input Mode) = DIGITAL (P0.6 pin is configured for
 123   1               //     digital mode.)
 124   1               // B7 (Port 0 Bit 7 Input Mode) = DIGITAL (P0.7 pin is configured for
 125   1               //     digital mode.)
 126   1               */
 127   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 128   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 129   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 130   1              // [P0MDIN - Port 0 Input Mode]$
 131   1      
 132   1              // $[P0SKIP - Port 0 Skip]
 133   1              /*
 134   1               // B0 (Port 0 Bit 0 Skip) = NOT_SKIPPED (P0.0 pin is not skipped by the
 135   1               //     crossbar.)
 136   1               // B1 (Port 0 Bit 1 Skip) = NOT_SKIPPED (P0.1 pin is not skipped by the
 137   1               //     crossbar.)
 138   1               // B2 (Port 0 Bit 2 Skip) = NOT_SKIPPED (P0.2 pin is not skipped by the
 139   1               //     crossbar.)
 140   1               // B3 (Port 0 Bit 3 Skip) = NOT_SKIPPED (P0.3 pin is not skipped by the
 141   1               //     crossbar.)
 142   1               // B4 (Port 0 Bit 4 Skip) = NOT_SKIPPED (P0.4 pin is not skipped by the
 143   1               //     crossbar.)
 144   1               // B5 (Port 0 Bit 5 Skip) = NOT_SKIPPED (P0.5 pin is not skipped by the
 145   1               //     crossbar.)
 146   1               // B6 (Port 0 Bit 6 Skip) = NOT_SKIPPED (P0.6 pin is not skipped by the
 147   1               //     crossbar.)
 148   1               // B7 (Port 0 Bit 7 Skip) = NOT_SKIPPED (P0.7 pin is not skipped by the
 149   1               //     crossbar.)
 150   1               */
 151   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__NOT_SKIPPED
 152   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 153   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 154   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 155   1              // [P0SKIP - Port 0 Skip]$
 156   1      
 157   1              // $[P0MASK - Port 0 Mask]
 158   1              /*
 159   1               // B0 (Port 0 Bit 0 Mask Value) = IGNORED (P0.0 pin logic value is
 160   1               //     ignored and will not cause a port mismatch event.)
 161   1               // B1 (Port 0 Bit 1 Mask Value) = IGNORED (P0.1 pin logic value is
 162   1               //     ignored and will not cause a port mismatch event.)
 163   1               // B2 (Port 0 Bit 2 Mask Value) = IGNORED (P0.2 pin logic value is
 164   1               //     ignored and will not cause a port mismatch event.)
 165   1               // B3 (Port 0 Bit 3 Mask Value) = IGNORED (P0.3 pin logic value is
 166   1               //     ignored and will not cause a port mismatch event.)
 167   1               // B4 (Port 0 Bit 4 Mask Value) = IGNORED (P0.4 pin logic value is
 168   1               //     ignored and will not cause a port mismatch event.)
 169   1               // B5 (Port 0 Bit 5 Mask Value) = IGNORED (P0.5 pin logic value is
 170   1               //     ignored and will not cause a port mismatch event.)
 171   1               // B6 (Port 0 Bit 6 Mask Value) = IGNORED (P0.6 pin logic value is
 172   1               //     ignored and will not cause a port mismatch event.)
 173   1               // B7 (Port 0 Bit 7 Mask Value) = IGNORED (P0.7 pin logic value is
 174   1               //     ignored and will not cause a port mismatch event.)
 175   1               */
 176   1              P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 4   

 177   1                              | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 178   1                              | P0MASK_B6__IGNORED | P0MASK_B7__IGNORED;
 179   1              // [P0MASK - Port 0 Mask]$
 180   1      
 181   1              // $[P0MAT - Port 0 Match]
 182   1              /*
 183   1               // B0 (Port 0 Bit 0 Match Value) = HIGH (P0.0 pin logic value is compared
 184   1               //     with logic HIGH.)
 185   1               // B1 (Port 0 Bit 1 Match Value) = HIGH (P0.1 pin logic value is compared
 186   1               //     with logic HIGH.)
 187   1               // B2 (Port 0 Bit 2 Match Value) = HIGH (P0.2 pin logic value is compared
 188   1               //     with logic HIGH.)
 189   1               // B3 (Port 0 Bit 3 Match Value) = HIGH (P0.3 pin logic value is compared
 190   1               //     with logic HIGH.)
 191   1               // B4 (Port 0 Bit 4 Match Value) = HIGH (P0.4 pin logic value is compared
 192   1               //     with logic HIGH.)
 193   1               // B5 (Port 0 Bit 5 Match Value) = HIGH (P0.5 pin logic value is compared
 194   1               //     with logic HIGH.)
 195   1               // B6 (Port 0 Bit 6 Match Value) = HIGH (P0.6 pin logic value is compared
 196   1               //     with logic HIGH.)
 197   1               // B7 (Port 0 Bit 7 Match Value) = HIGH (P0.7 pin logic value is compared
 198   1               //     with logic HIGH.)
 199   1               */
 200   1              P0MAT = P0MAT_B0__HIGH | P0MAT_B1__HIGH | P0MAT_B2__HIGH | P0MAT_B3__HIGH
 201   1                              | P0MAT_B4__HIGH | P0MAT_B5__HIGH | P0MAT_B6__HIGH | P0MAT_B7__HIGH;
 202   1              // [P0MAT - Port 0 Match]$
 203   1      
 204   1      }
 205          
 206          //================================================================================
 207          // PORTS_1_enter_DefaultMode_from_RESET
 208          //================================================================================
 209          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 210   1              // $[P1 - Port 1 Pin Latch]
 211   1              /*
 212   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
 213   1               //     float high.)
 214   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
 215   1               //     float high.)
 216   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
 217   1               //     float high.)
 218   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
 219   1               //     float high.)
 220   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
 221   1               //     float high.)
 222   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
 223   1               //     float high.)
 224   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
 225   1               //     float high.)
 226   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
 227   1               //     float high.)
 228   1               */
 229   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 230   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
 231   1              // [P1 - Port 1 Pin Latch]$
 232   1      
 233   1              // $[P1MDOUT - Port 1 Output Mode]
 234   1              /*
 235   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
 236   1               //     drain.)
 237   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
 238   1               //     drain.)
 239   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 5   

 240   1               //     drain.)
 241   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
 242   1               //     drain.)
 243   1               // B4 (Port 1 Bit 4 Output Mode) = OPEN_DRAIN (P1.4 output is open-
 244   1               //     drain.)
 245   1               // B5 (Port 1 Bit 5 Output Mode) = OPEN_DRAIN (P1.5 output is open-
 246   1               //     drain.)
 247   1               // B6 (Port 1 Bit 6 Output Mode) = OPEN_DRAIN (P1.6 output is open-
 248   1               //     drain.)
 249   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
 250   1               //     drain.)
 251   1               */
 252   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 253   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 254   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 255   1                              | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 256   1              // [P1MDOUT - Port 1 Output Mode]$
 257   1      
 258   1              // $[P1MDIN - Port 1 Input Mode]
 259   1              /*
 260   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
 261   1               //     digital mode.)
 262   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
 263   1               //     digital mode.)
 264   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
 265   1               //     digital mode.)
 266   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
 267   1               //     digital mode.)
 268   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
 269   1               //     digital mode.)
 270   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
 271   1               //     digital mode.)
 272   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 273   1               //     digital mode.)
 274   1               // B7 (Port 1 Bit 7 Input Mode) = ANALOG (P1.7 pin is configured for
 275   1               //     analog mode.)
 276   1               */
 277   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 278   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 279   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 280   1              // [P1MDIN - Port 1 Input Mode]$
 281   1      
 282   1              // $[P1SKIP - Port 1 Skip]
 283   1              /*
 284   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 285   1               //     crossbar.)
 286   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 287   1               //     crossbar.)
 288   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 289   1               //     crossbar.)
 290   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 291   1               //     crossbar.)
 292   1               // B4 (Port 1 Bit 4 Skip) = NOT_SKIPPED (P1.4 pin is not skipped by the
 293   1               //     crossbar.)
 294   1               // B5 (Port 1 Bit 5 Skip) = NOT_SKIPPED (P1.5 pin is not skipped by the
 295   1               //     crossbar.)
 296   1               // B6 (Port 1 Bit 6 Skip) = NOT_SKIPPED (P1.6 pin is not skipped by the
 297   1               //     crossbar.)
 298   1               // B7 (Port 1 Bit 7 Skip) = SKIPPED (P1.7 pin is skipped by the
 299   1               //     crossbar.)
 300   1               */
 301   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 302   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 6   

 303   1                              | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 304   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 305   1              // [P1SKIP - Port 1 Skip]$
 306   1      
 307   1              // $[P1MASK - Port 1 Mask]
 308   1              /*
 309   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 310   1               //     ignored and will not cause a port mismatch event.)
 311   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 312   1               //     ignored and will not cause a port mismatch event.)
 313   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 314   1               //     ignored and will not cause a port mismatch event.)
 315   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 316   1               //     ignored and will not cause a port mismatch event.)
 317   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 318   1               //     ignored and will not cause a port mismatch event.)
 319   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 320   1               //     ignored and will not cause a port mismatch event.)
 321   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 322   1               //     ignored and will not cause a port mismatch event.)
 323   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 324   1               //     ignored and will not cause a port mismatch event.)
 325   1               */
 326   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 327   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 328   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 329   1              // [P1MASK - Port 1 Mask]$
 330   1      
 331   1              // $[P1MAT - Port 1 Match]
 332   1              /*
 333   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 334   1               //     with logic HIGH.)
 335   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 336   1               //     with logic HIGH.)
 337   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 338   1               //     with logic HIGH.)
 339   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 340   1               //     with logic HIGH.)
 341   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 342   1               //     with logic HIGH.)
 343   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 344   1               //     with logic HIGH.)
 345   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 346   1               //     with logic HIGH.)
 347   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 348   1               //     with logic HIGH.)
 349   1               */
 350   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
 351   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 352   1              // [P1MAT - Port 1 Match]$
 353   1      
 354   1      }
 355          
 356          //================================================================================
 357          // PORTS_2_enter_DefaultMode_from_RESET
 358          //================================================================================
 359          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 360   1              // $[P2 - Port 2 Pin Latch]
 361   1              // [P2 - Port 2 Pin Latch]$
 362   1      
 363   1              // $[P2MDOUT - Port 2 Output Mode]
 364   1              /*
 365   1               // B0 (Port 2 Bit 0 Output Mode) = PUSH_PULL (P2.0 output is push-pull.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 7   

 366   1               // B1 (Port 2 Bit 1 Output Mode) = OPEN_DRAIN (P2.1 output is open-
 367   1               //     drain.)
 368   1               // B2 (Port 2 Bit 2 Output Mode) = OPEN_DRAIN (P2.2 output is open-
 369   1               //     drain.)
 370   1               // B3 (Port 2 Bit 3 Output Mode) = PUSH_PULL (P2.3 output is push-pull.)
 371   1               // B4 (Port 2 Bit 4 Output Mode) = OPEN_DRAIN (P2.4 output is open-
 372   1               //     drain.)
 373   1               // B5 (Port 2 Bit 5 Output Mode) = OPEN_DRAIN (P2.5 output is open-
 374   1               //     drain.)
 375   1               // B6 (Port 2 Bit 6 Output Mode) = OPEN_DRAIN (P2.6 output is open-
 376   1               //     drain.)
 377   1               */
 378   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 379   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 380   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 381   1                              | P2MDOUT_B6__OPEN_DRAIN;
 382   1              // [P2MDOUT - Port 2 Output Mode]$
 383   1      
 384   1              // $[P2MDIN - Port 2 Input Mode]
 385   1              // [P2MDIN - Port 2 Input Mode]$
 386   1      
 387   1              // $[P2SKIP - Port 2 Skip]
 388   1              /*
 389   1               // B0 (Port 2 Bit 0 Skip) = SKIPPED (P2.0 pin is skipped by the
 390   1               //     crossbar.)
 391   1               // B1 (Port 2 Bit 1 Skip) = NOT_SKIPPED (P2.1 pin is not skipped by the
 392   1               //     crossbar.)
 393   1               // B2 (Port 2 Bit 2 Skip) = NOT_SKIPPED (P2.2 pin is not skipped by the
 394   1               //     crossbar.)
 395   1               // B3 (Port 2 Bit 3 Skip) = SKIPPED (P2.3 pin is skipped by the
 396   1               //     crossbar.)
 397   1               */
 398   1              SFRPAGE = 0x20;
 399   1              P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED
 400   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 401   1              // [P2SKIP - Port 2 Skip]$
 402   1      
 403   1              // $[P2MASK - Port 2 Mask]
 404   1              // [P2MASK - Port 2 Mask]$
 405   1      
 406   1              // $[P2MAT - Port 2 Match]
 407   1              // [P2MAT - Port 2 Match]$
 408   1      
 409   1      }
 410          
 411          //================================================================================
 412          // PBCFG_0_enter_DefaultMode_from_RESET
 413          //================================================================================
 414          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 415   1              // $[XBR2 - Port I/O Crossbar 2]
 416   1              /*
 417   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 418   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 419   1               //     mode).)
 420   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 421   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 422   1               //     pin.)
 423   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 424   1               //     at Port pin.)
 425   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 426   1               //     at Port pin.)
 427   1               */
 428   1              SFRPAGE = 0x00;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 8   

 429   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 430   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 431   1                              | XBR2_URT1CTSE__DISABLED;
 432   1              // [XBR2 - Port I/O Crossbar 2]$
 433   1      
 434   1              // $[PRTDRV - Port Drive Strength]
 435   1              // [PRTDRV - Port Drive Strength]$
 436   1      
 437   1              // $[XBR0 - Port I/O Crossbar 0]
 438   1              /*
 439   1               // URT0E (UART0 I/O Enable) = ENABLED (UART0 TX0, RX0 routed to Port pins
 440   1               //     P0.4 and P0.5.)
 441   1               // SPI0E (SPI I/O Enable) = DISABLED (SPI I/O unavailable at Port pins.)
 442   1               // SMB0E (SMB0 I/O Enable) = DISABLED (SMBus 0 I/O unavailable at Port
 443   1               //     pins.)
 444   1               // CP0E (Comparator0 Output Enable) = DISABLED (CP0 unavailable at Port
 445   1               //     pin.)
 446   1               // CP0AE (Comparator0 Asynchronous Output Enable) = DISABLED
 447   1               //     (Asynchronous CP0 unavailable at Port pin.)
 448   1               // CP1E (Comparator1 Output Enable) = DISABLED (CP1 unavailable at Port
 449   1               //     pin.)
 450   1               // CP1AE (Comparator1 Asynchronous Output Enable) = DISABLED
 451   1               //     (Asynchronous CP1 unavailable at Port pin.)
 452   1               // SYSCKE (SYSCLK Output Enable) = DISABLED (SYSCLK unavailable at Port
 453   1               //     pin.)
 454   1               */
 455   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 456   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 457   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 458   1              // [XBR0 - Port I/O Crossbar 0]$
 459   1      
 460   1              // $[XBR1 - Port I/O Crossbar 1]
 461   1              // [XBR1 - Port I/O Crossbar 1]$
 462   1      
 463   1      }
 464          
 465          //================================================================================
 466          // ADC_0_enter_DefaultMode_from_RESET
 467          //================================================================================
 468          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 469   1              // $[ADC0CN2 - ADC0 Control 2]
 470   1              /*
 471   1               // ADCM (Start of Conversion Mode Select) = TIMER2 (ADC0 conversion
 472   1               //     initiated on overflow of Timer 2.)
 473   1               // PACEN (Preserve Accumulator Enable) = PAC_DISABLED (The ADC
 474   1               //     accumulator is over-written with the results of any conversion (or set
 475   1               //     of conversions as specified by ADRPT).)
 476   1               */
 477   1              ADC0CN2 = ADC0CN2_ADCM__TIMER2 | ADC0CN2_PACEN__PAC_DISABLED;
 478   1              // [ADC0CN2 - ADC0 Control 2]$
 479   1      
 480   1              // $[ADC0CN1 - ADC0 Control 1]
 481   1              /*
 482   1               // ADBITS (Resolution Control) = 12_BIT (ADC0 operates in 12-bit mode.)
 483   1               // ADSJST (Accumulator Shift and Justify) = RIGHT_NO_SHIFT (Right
 484   1               //     justified. No shifting applied.)
 485   1               // ADRPT (Repeat Count) = ACC_1 (Perform and Accumulate 1 conversion.)
 486   1               */
 487   1              ADC0CN1 = ADC0CN1_ADBITS__12_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 488   1                              | ADC0CN1_ADRPT__ACC_1;
 489   1              // [ADC0CN1 - ADC0 Control 1]$
 490   1      
 491   1              // $[ADC0MX - ADC0 Multiplexer Selection]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 9   

 492   1              /*
 493   1               // ADC0MX (AMUX0 Positive Input Selection) = ADC0P13 (Select ADC0.13.)
 494   1               */
 495   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 496   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 497   1      
 498   1              // $[ADC0CF2 - ADC0 Power Control]
 499   1              /*
 500   1               // GNDSL (Analog Ground Reference) = GND_PIN (The ADC0 ground reference
 501   1               //     is the GND pin.)
 502   1               // REFSL (Voltage Reference Select) = VDD_PIN (The ADC0 voltage reference
 503   1               //     is the VDD pin.)
 504   1               // ADPWR (Power Up Delay Time) = 0x03
 505   1               */
 506   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 507   1                              | (0x03 << ADC0CF2_ADPWR__SHIFT);
 508   1              // [ADC0CF2 - ADC0 Power Control]$
 509   1      
 510   1              // $[ADC0CF0 - ADC0 Configuration]
 511   1              /*
 512   1               // ADCLKSEL (ADC Clock Select) = SYSCLK (ADCCLK = SYSCLK.)
 513   1               // ADSC (SAR Clock Divider) = 0x01
 514   1               */
 515   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 516   1              // [ADC0CF0 - ADC0 Configuration]$
 517   1      
 518   1              // $[ADC0CF1 - ADC0 Configuration]
 519   1              /*
 520   1               // ADLPM (Low Power Mode Enable) = LP_DISABLED (Disable low power
 521   1               //     mode.)
 522   1               // ADTK (Conversion Tracking Time) = 0x03
 523   1               */
 524   1              ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x03 << ADC0CF1_ADTK__SHIFT);
 525   1              // [ADC0CF1 - ADC0 Configuration]$
 526   1      
 527   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 528   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 529   1      
 530   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 531   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 532   1      
 533   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 534   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 535   1      
 536   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 537   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 538   1      
 539   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 540   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 541   1      
 542   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 543   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 544   1      
 545   1              // $[ADC0CN0 - ADC0 Control 0]
 546   1              /*
 547   1               // ADEN (ADC Enable) = ENABLED (Enable ADC0 (active and ready for data
 548   1               //     conversions).)
 549   1               // IPOEN (Idle Powered-off Enable) = POWER_DOWN (Power down when ADC is
 550   1               //     idle (not converting).)
 551   1               */
 552   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_IPOEN__POWER_DOWN;
 553   1              // [ADC0CN0 - ADC0 Control 0]$
 554   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 10  

 555   1      }
 556          
 557          //================================================================================
 558          // CLOCK_0_enter_DefaultMode_from_RESET
 559          //================================================================================
 560          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 561   1              // $[HFOSC1 Setup]
 562   1              // [HFOSC1 Setup]$
 563   1      
 564   1              // $[CLKSEL - Clock Select]
 565   1              /*
 566   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 567   1               //     High Frequency Oscillator 0.)
 568   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 569   1               //     selected clock source divided by 1.)
 570   1               // CLKSL (Clock Source Select) = HFOSC0 (Clock derived from the Internal
 571   1               //     High Frequency Oscillator 0.)
 572   1               // CLKDIV (Clock Source Divider) = SYSCLK_DIV_1 (SYSCLK is equal to
 573   1               //     selected clock source divided by 1.)
 574   1               */
 575   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 576   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 577   1              while (CLKSEL & CLKSEL_DIVRDY__BMASK == CLKSEL_DIVRDY__NOT_READY)
 578   1                      ;
 579   1              // [CLKSEL - Clock Select]$
 580   1      
 581   1      }
 582          
 583          //================================================================================
 584          // TIMER01_0_enter_DefaultMode_from_RESET
 585          //================================================================================
 586          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 587   1              // $[Timer Initialization]
 588   1              //Save Timer Configuration
 589   1              uint8_t TCON_save;
 590   1              TCON_save = TCON;
 591   1              //Stop Timers
 592   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 593   1      
 594   1              // [Timer Initialization]$
 595   1      
 596   1              // $[TH0 - Timer 0 High Byte]
 597   1              // [TH0 - Timer 0 High Byte]$
 598   1      
 599   1              // $[TL0 - Timer 0 Low Byte]
 600   1              // [TL0 - Timer 0 Low Byte]$
 601   1      
 602   1              // $[TH1 - Timer 1 High Byte]
 603   1              /*
 604   1               // TH1 (Timer 1 High Byte) = 0xF7
 605   1               */
 606   1              TH1 = (0xF7 << TH1_TH1__SHIFT);
 607   1              // [TH1 - Timer 1 High Byte]$
 608   1      
 609   1              // $[TL1 - Timer 1 Low Byte]
 610   1              // [TL1 - Timer 1 Low Byte]$
 611   1      
 612   1              // $[Timer Restoration]
 613   1              //Restore Timer Configuration
 614   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 615   1      
 616   1              // [Timer Restoration]$
 617   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 11  

 618   1      }
 619          
 620          //================================================================================
 621          // TIMER16_2_enter_DefaultMode_from_RESET
 622          //================================================================================
 623          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 624   1              // $[Timer Initialization]
 625   1              // Save Timer Configuration
 626   1              uint8_t TMR2CN0_TR2_save;
 627   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 628   1              // Stop Timer
 629   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 630   1              // [Timer Initialization]$
 631   1      
 632   1              // $[TMR2CN1 - Timer 2 Control 1]
 633   1              // [TMR2CN1 - Timer 2 Control 1]$
 634   1      
 635   1              // $[TMR2CN0 - Timer 2 Control]
 636   1              // [TMR2CN0 - Timer 2 Control]$
 637   1      
 638   1              // $[TMR2H - Timer 2 High Byte]
 639   1              /*
 640   1               // TMR2H (Timer 2 High Byte) = 0xFF
 641   1               */
 642   1              TMR2H = (0xFF << TMR2H_TMR2H__SHIFT);
 643   1              // [TMR2H - Timer 2 High Byte]$
 644   1      
 645   1              // $[TMR2L - Timer 2 Low Byte]
 646   1              /*
 647   1               // TMR2L (Timer 2 Low Byte) = 0x34
 648   1               */
 649   1              TMR2L = (0x34 << TMR2L_TMR2L__SHIFT);
 650   1              // [TMR2L - Timer 2 Low Byte]$
 651   1      
 652   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 653   1              /*
 654   1               // TMR2RLH (Timer 2 Reload High Byte) = 0xFF
 655   1               */
 656   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 657   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 658   1      
 659   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 660   1              /*
 661   1               // TMR2RLL (Timer 2 Reload Low Byte) = 0x34
 662   1               */
 663   1              TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 664   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 665   1      
 666   1              // $[TMR2CN0]
 667   1              /*
 668   1               // TR2 (Timer 2 Run Control) = RUN (Start Timer 2 running.)
 669   1               */
 670   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 671   1              // [TMR2CN0]$
 672   1      
 673   1              // $[Timer Restoration]
 674   1              // Restore Timer Configuration
 675   1              TMR2CN0 |= TMR2CN0_TR2_save;
 676   1              // [Timer Restoration]$
 677   1      
 678   1      }
 679          
 680          //================================================================================
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 12  

 681          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 682          //================================================================================
 683          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 684   1              // $[CKCON0 - Clock Control 0]
 685   1              // [CKCON0 - Clock Control 0]$
 686   1      
 687   1              // $[CKCON1 - Clock Control 1]
 688   1              // [CKCON1 - Clock Control 1]$
 689   1      
 690   1              // $[TMOD - Timer 0/1 Mode]
 691   1              /*
 692   1               // T0M (Timer 0 Mode Select) = MODE0 (Mode 0, 13-bit Counter/Timer)
 693   1               // T1M (Timer 1 Mode Select) = MODE2 (Mode 2, 8-bit Counter/Timer with
 694   1               //     Auto-Reload)
 695   1               // CT0 (Counter/Timer 0 Select) = TIMER (Timer Mode. Timer 0 increments
 696   1               //     on the clock defined by T0M in the CKCON0 register.)
 697   1               // GATE0 (Timer 0 Gate Control) = DISABLED (Timer 0 enabled when TR0 = 1
 698   1               //     irrespective of INT0 logic level.)
 699   1               // CT1 (Counter/Timer 1 Select) = TIMER (Timer Mode. Timer 1 increments
 700   1               //     on the clock defined by T1M in the CKCON0 register.)
 701   1               // GATE1 (Timer 1 Gate Control) = DISABLED (Timer 1 enabled when TR1 = 1
 702   1               //     irrespective of INT1 logic level.)
 703   1               */
 704   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 705   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 706   1              // [TMOD - Timer 0/1 Mode]$
 707   1      
 708   1              // $[TCON - Timer 0/1 Control]
 709   1              /*
 710   1               // TR1 (Timer 1 Run Control) = RUN (Start Timer 1 running.)
 711   1               */
 712   1              TCON |= TCON_TR1__RUN;
 713   1              // [TCON - Timer 0/1 Control]$
 714   1      
 715   1      }
 716          
 717          //================================================================================
 718          // UART_0_enter_DefaultMode_from_RESET
 719          //================================================================================
 720          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 721   1              // $[SCON0 - UART0 Serial Port Control]
 722   1              // [SCON0 - UART0 Serial Port Control]$
 723   1      
 724   1      }
 725          
 726          //================================================================================
 727          // INTERRUPT_0_enter_DefaultMode_from_RESET
 728          //================================================================================
 729          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 730   1              // $[EIE1 - Extended Interrupt Enable 1]
 731   1              /*
 732   1               // EADC0 (ADC0 Conversion Complete Interrupt Enable) = ENABLED (Enable
 733   1               //     interrupt requests generated by the ADINT flag.)
 734   1               // EWADC0 (ADC0 Window Comparison Interrupt Enable) = DISABLED (Disable
 735   1               //     ADC0 Window Comparison interrupt.)
 736   1               // ECP0 (Comparator0 (CP0) Interrupt Enable) = DISABLED (Disable CP0
 737   1               //     interrupts.)
 738   1               // ECP1 (Comparator1 (CP1) Interrupt Enable) = DISABLED (Disable CP1
 739   1               //     interrupts.)
 740   1               // EMAT (Port Match Interrupts Enable) = DISABLED (Disable all Port Match
 741   1               //     interrupts.)
 742   1               // EPCA0 (Programmable Counter Array (PCA0) Interrupt Enable) = DISABLED
 743   1               //     (Disable all PCA0 interrupts.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 13  

 744   1               // ESMB0 (SMBus (SMB0) Interrupt Enable) = DISABLED (Disable all SMB0
 745   1               //     interrupts.)
 746   1               // ET3 (Timer 3 Interrupt Enable) = DISABLED (Disable Timer 3
 747   1               //     interrupts.)
 748   1               */
 749   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 750   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 751   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 752   1              // [EIE1 - Extended Interrupt Enable 1]$
 753   1      
 754   1              // $[EIE2 - Extended Interrupt Enable 2]
 755   1              // [EIE2 - Extended Interrupt Enable 2]$
 756   1      
 757   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 758   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 759   1      
 760   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 761   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 762   1      
 763   1              // $[EIP2 - Extended Interrupt Priority 2]
 764   1              // [EIP2 - Extended Interrupt Priority 2]$
 765   1      
 766   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 767   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 768   1      
 769   1              // $[IE - Interrupt Enable]
 770   1              /*
 771   1               // EA (All Interrupts Enable) = ENABLED (Enable each interrupt according
 772   1               //     to its individual mask setting.)
 773   1               // EX0 (External Interrupt 0 Enable) = DISABLED (Disable external
 774   1               //     interrupt 0.)
 775   1               // EX1 (External Interrupt 1 Enable) = DISABLED (Disable external
 776   1               //     interrupt 1.)
 777   1               // ESPI0 (SPI0 Interrupt Enable) = DISABLED (Disable all SPI0
 778   1               //     interrupts.)
 779   1               // ET0 (Timer 0 Interrupt Enable) = DISABLED (Disable all Timer 0
 780   1               //     interrupt.)
 781   1               // ET1 (Timer 1 Interrupt Enable) = DISABLED (Disable all Timer 1
 782   1               //     interrupt.)
 783   1               // ET2 (Timer 2 Interrupt Enable) = DISABLED (Disable Timer 2 interrupt.)
 784   1               // ES0 (UART0 Interrupt Enable) = DISABLED (Disable UART0 interrupt.)
 785   1               */
 786   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 787   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 788   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 789   1              // [IE - Interrupt Enable]$
 790   1      
 791   1              // $[IP - Interrupt Priority]
 792   1              // [IP - Interrupt Priority]$
 793   1      
 794   1              // $[IPH - Interrupt Priority High]
 795   1              // [IPH - Interrupt Priority High]$
 796   1      
 797   1      }
 798          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    196    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
C51 COMPILER V9.53.0.0   INITDEVICE                                                        07/17/2019 16:25:41 PAGE 14  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
